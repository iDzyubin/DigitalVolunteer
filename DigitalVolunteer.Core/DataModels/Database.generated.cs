//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DigitalVolunteer.Core.DataModels
{
	/// <summary>
	/// Database       : digital_volunteer
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 11.3
	/// </summary>
	public partial class MainDb : LinqToDB.Data.DataConnection
	{
		public ITable<Category> Categories { get { return this.GetTable<Category>(); } }
		public ITable<User>     Users      { get { return this.GetTable<User>(); } }

		partial void InitMappingSchema()
		{
		}

		public MainDb()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public MainDb(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dv", Name="categories")]
	public partial class Category
	{
		[Column("id"),   PrimaryKey, NotNull] public Guid   Id   { get; set; } // uuid
		[Column("name"),             NotNull] public string Name { get; set; } // character varying
	}

	[Table(Schema="dv", Name="users")]
	public partial class User
	{
		[Column("id"),                PrimaryKey,  NotNull] public Guid       Id               { get; set; } // uuid
		[Column("email"),                          NotNull] public string     Email            { get; set; } // character varying
		[Column("password"),                       NotNull] public string     Password         { get; set; } // character varying
		[Column("status"),                         NotNull] public UserStatus Status           { get; set; } // integer
		[Column("registration_date"),    Nullable         ] public DateTime?  RegistrationDate { get; set; } // timestamp (6) without time zone
	}

	public static partial class TableExtensions
	{
		public static Category Find(this ITable<Category> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, Guid Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
