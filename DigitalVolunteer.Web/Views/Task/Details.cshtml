@model DigitalTask
@inject ITaskRepository TaskRepository
@inject TaskService TaskService
@{
    var userId = User.GetId();
    var isTaskOwner    = TaskService.IsDigitalTaskOwner(Model.Id, userId);
    var isTaskExecutor = TaskService.IsDigitalTaskExecutor(Model.Id, userId);
    var hasExecutor    = TaskService.HasIsDigitalTaskExecutor(Model.Id);
}
<div class="d-flex justify-content-center">
    <div class="col-md-8 col-sm-12">
        <div class="card">
            <h4 class="card-header">@Model.Title</h4>
            <div class="card-body">
                <div class="col-md-12 row">
                    <div class="col-md-4"><b>Начать</b></div>
                    <div class="col-md-8">@(Model.StartDate.HasValue ? Model.StartDate.Value.ConvertToString() : "Дата начала отсутствует")</div>
                </div>
                <br />
                <div class="col-md-12 row">
                    <div class="col-md-4"><b>Завершить</b></div>
                    <div class="col-md-8">@(Model.EndDate.HasValue ? Model.EndDate.Value.ConvertToString() : "Дата окончания отсутствует")</div>
                </div>
                <br />
                <div class="col-md-12 row">
                    <div class="col-md-4"><b>Место указания услуги</b></div>
                    <div class="col-md-8">@Model.TaskFormat.GetDisplayName()</div>
                </div>
                <br />
                <div class="col-md-12 row">
                    <div class="col-md-4"><b>Описание задания</b></div>
                    <div class="col-md-8">@(String.IsNullOrEmpty( Model.Description ) ? "Описание отсутствует" : Model.Description)</div>
                </div>
                <br />
                @if( TaskService.IsDigitalTaskOwner( Model.Id, User.GetId().Value ) && hasExecutor )
                {
                    <div class="col-md-12 row">
                        <div class="col-md-4"><b>Исполнитель</b></div>
                        <div class="col-md-8">
                            <a asp-controller="Account" asp-action="Profile" asp-route-id="@Model.Executor.Id">
                                <u>@Model.Executor.GetShortName()</u>
                            </a>
                        </div>
                    </div>
                    <br />
                }
                <div class="form-group text-center">
                    @if( userId.HasValue )
                    {
                        @if( isTaskOwner && hasExecutor )
                        {
                            <button class="btn btn-outline-secondary col-md-6 col-sm-4 disabled">Задача в процессе выполнения</button>

                        }
                        @if( !isTaskOwner && !hasExecutor )
                        {
                            <a asp-controller="Task" asp-action="OfferTaskHelp" asp-route-taskid="@Model.Id"
                               class="btn btn-outline-success col-md-6 col-sm-4">
                                Предложить свои услуги
                            </a>
                        }
                        @if( isTaskExecutor )
                        {
                            <a asp-controller="Task" asp-action="CancelTaskHelp" asp-route-taskid="@Model.Id"
                               class="btn btn-outline-danger col-md-6 col-sm-4">
                                Отменить заявку
                            </a>
                        }
                    }
                </div>
            </div>
            <div class="card-footer">
                Заказчик:
                <a asp-controller="Account" asp-action="Profile" asp-route-id="@Model.Owner.Id">
                    <u>@Model.Owner.GetShortName()</u>
                </a>
            </div>
        </div>
    </div>
</div>